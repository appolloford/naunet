{% if header %}
#include "{{ header_file }}"
{% else %}
#include <cvode/cvode.h>
#include <nvector/nvector_serial.h>
#include "naunet_constants.h"
#include "userdata.h"
{% endif %}
#include <math.h>

// Simple function that calculates the differential equation.
{{ func }}{

    realtype *{{ vector }} = N_VGetArrayPointer(u);
    realtype *{{ lhs }} = N_VGetArrayPointer(u_dot);
    UserData *u_data = (UserData*) user_data;
    {% for v in varlist -%}
        {{ v }}
    {% endfor %}

    realtype Te = Tgas*8.617343e-5; //Tgas in eV (eV)
    realtype lnTe = log(Te); //ln of Te (#)
    realtype T32 = Tgas*0.0033333333333333335; //Tgas/(300 K) (#)
    realtype invT = 1.0/Tgas; //inverse of T (1/K)
    realtype invTe = 1.0/Te; //inverse of T (1/eV)
    realtype sqrTgas = sqrt(Tgas); //Tgas rootsquare (K**0.5)

    {{ rate_declare }}

    {% set wrap = "\n        " -%}
    {% set bclose = wrap + "}" -%}
    {% for assign in rate_assign -%}
        {{ assign | wordwrap(80) | replace("\n", wrap) | replace(bclose, '\n    }') }}
        {{ "" }}
    {% endfor %}

#ifdef DEBUG
    FILE *fptr = fopen("reactionrates.dat", "a");
    for (int i=0; i<NREACTIONS; i++) {
        fprintf(fptr, "%13.7e ", k[i]);
    }
    fprintf(fptr, "\n");
    fclose(fptr);
#endif

    {% for eq in eqns -%}
        {{ eq | wordwrap(80) | replace('\n', wrap) }}
    {% endfor %}

    return 0;

}