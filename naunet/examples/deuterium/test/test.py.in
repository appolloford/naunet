import os
import sys
sys.path.append(os.getenv('CHEMISTRY_MODULE_PATH'))

import numpy as np
from tomlkit.toml_file import TOMLFile

from @PYMODNAME@ import Naunet, NaunetData

config_path = os.getenv('NAUNET_CONFIG_PATH')
config = TOMLFile(os.path.join(config_path, "naunet_config.toml"))
content = config.read()
chemistry = content["chemistry"]
species = chemistry["species"]

times = np.loadtxt("timeres.dat")
timesteps = times[1:] - times[:-1]

naunet_solver = Naunet()
naunet_data = NaunetData()

spy = 86400.0 * 365.0
pi = 3.14159265
rD = 1.0e-5
rhoD = 3.0
DtoGM = 7.09e-3
amH = 1.66043e-24
nH = 1e5
OPRH2 = 0.1

naunet_data.nH = nH
naunet_data.Tgas = 15.0
naunet_data.user_Av = 30.0
naunet_data.user_crflux = 2.5e-17
naunet_data.user_GtoDN = (4.e0 * pi * rhoD * rD * rD * rD) / (3.e0 * DtoGM * amH)

naunet_solver.Init()
if @USE_CUDA@:
    naunet_solver.Reset(1)

y = np.ones(len(species)) * 1e-40
# Only works if the species list in naunet_config.toml has been updated
# Otherwise check the macros in naunet_macros.h
y[species.index("pH2")]    = 1.0 / (1.0 + OPRH2) * 0.5 * nH
y[species.index("oH2")]    = OPRH2 / (1.0 + OPRH2) * 0.5 * nH
y[species.index("HD")]     = 1.5e-5 * nH
y[species.index("He")]     = 1.0e-1 * nH
y[species.index("N")]      = 2.1e-6 * nH
y[species.index("O")]      = 1.8e-5 * nH
y[species.index("C")]      = 7.3e-6 * nH
y[species.index("GRAIN0")] = 1.3215e-12 * nH

naunet_solver.Solve(y, 1e4, naunet_data)

with open("evolution_pymodule.dat", "w") as evoldat:

    for ti, dtyr in enumerate(timesteps):
        dt = dtyr * spy
        y = naunet_solver.Solve(y, dt, naunet_data)

        fmty = [f"{yi:13.7e}" for yi in y]
        evoldat.write(" ".join([f"{times[ti+1]:13.7e}", *fmty]))
        evoldat.write("\n")

naunet_solver.Finalize();
