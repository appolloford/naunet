// {% extends "base/cpp/tests/multiplegrid.cpp.j2" %}
// clang-format off
{% block parameters %}
    int nsteps       = 50;
    double spy       = 86400.0 * 365.0;
    double pi        = 3.14159265;
    double rD        = 1.0e-5;
    double rhoD      = 3.0;
    double DtoGM     = 7.09e-3;
    double amH       = 1.66043e-24;
    double nH        = 1e5;
    double OPRH2     = 0.1;

    for (int isys = 0; isys < nsystem; isys++) {
        data[isys].nH          = nH;
        data[isys].Tgas        = 15.0;
        data[isys].user_Av     = 30.0;
        data[isys].user_crflux = 2.5e-17;
        data[isys].user_GtoDN =
            (4.e0 * pi * rhoD * rD * rD * rD) / (3.e0 * DtoGM * amH);
    }
{% endblock parameters %}
{% block initial_abundance %}
    double *y = new double[nsystem * NEQUATIONS];
    for (int isys = 0; isys < nsystem; isys++) {
        for (int i = 0; i < NEQUATIONS; i++) {
            y[isys * NEQUATIONS + i] = 1.e-40;
        }
        y[isys * NEQUATIONS + IDX_pH2I]    = 1.0 / (1.0 + OPRH2) * 0.5 * nH;
        y[isys * NEQUATIONS + IDX_oH2I]    = OPRH2 / (1.0 + OPRH2) * 0.5 * nH;
        y[isys * NEQUATIONS + IDX_HDI]     = 1.5e-5 * nH;
        y[isys * NEQUATIONS + IDX_HeI]     = 1.0e-1 * nH;
        y[isys * NEQUATIONS + IDX_NI]      = 2.1e-6 * nH;
        y[isys * NEQUATIONS + IDX_OI]      = 1.8e-5 * nH;
        y[isys * NEQUATIONS + IDX_CI]      = 7.3e-6 * nH;
        y[isys * NEQUATIONS + IDX_GRAIN0I] = 1.3215e-12 * nH;
    }
{% endblock initial_abundance %}
{% block timesteps %}
    std::vector<double> timesteps;
    double time, next;
    int nsteps = 50;  // number of steps, maximum 10046 in `timeres.dat`

    FILE *tfile = fopen("timeres.dat", "r");

    fscanf(tfile, "%lf\n", &time);  // read the first one
    for (int i = 0; i < nsteps; i++) {
        fscanf(tfile, "%lf\n", &next);
        timesteps.push_back(next - time);
        time = next;
    }
    fclose(tfile);
{% endblock timesteps %}