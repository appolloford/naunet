// {% extends "base/cpp/tests/singlegrid.cpp.j2" %}
// clang-format off
{% block parameters %}
    double nH       = 2e4;
    double zeta     = 1.3e-17;
    double Tgas     = 15.0;
    double Av       = 10.0;
    double omega    = 0.5;
    double G0       = 1.0;
    double rG       = 1e-5;
    double gdens    = 7.6394373e-13 * nH;
    double sites    = 1.5e15;
    double fr       = 1.0;
    double opt_thd  = 1.0;
    double opt_crd  = 1.0;
    double opt_uvd  = 1.0;
    double opt_h2d  = 1.0;
    double eb_crd   = 1.21e3;
    double eb_h2d   = 1.21e3;
    double eb_uvd   = 1.00e4;
    double crdeseff = 1.0e5;
    double h2deseff = 1.0e-2;
    double uvcreff  = 1.0e-3;

    data.nH       = nH;
    data.zeta     = zeta;
    data.Tgas     = Tgas;
    data.Av       = Av;
    data.omega    = omega;
    data.G0       = G0;
    data.rG       = rG;
    data.gdens    = gdens;
    data.sites    = sites;
    data.fr       = fr;
    data.opt_thd  = opt_thd;
    data.opt_crd  = opt_crd;
    data.opt_uvd  = opt_uvd;
    data.opt_h2d  = opt_h2d;
    data.eb_crd   = eb_crd;
    data.eb_h2d   = eb_h2d;
    data.eb_uvd   = eb_uvd;
    data.crdeseff = crdeseff;
    data.h2deseff = h2deseff;
    data.uvcreff  = uvcreff;
{% endblock parameters %}
{% block initial_abundance %}
    double y[NEQUATIONS] = {0.0};
    // for (int i = 0; i < NEQUATIONS; i++)
    // {
    //     y[i] = 1.e-40;
    // }
    y[IDX_H2I]           = 0.5 * nH;
    y[IDX_HI]            = 5.0e-5 * nH;
    y[IDX_HeI]           = 9.75e-2 * nH;
    y[IDX_NI]            = 7.5e-5 * nH;
    y[IDX_OI]            = 1.8e-4 * nH;
    y[IDX_COI]           = 1.4e-4 * nH;
    y[IDX_SI]            = 8.0e-8 * nH;
    y[IDX_SiI]           = 8.0e-9 * nH;
    y[IDX_MgI]           = 7.0e-9 * nH;
    y[IDX_ClI]           = 4.0e-9 * nH;
{% endblock initial_abundance %}