#ifndef __NAUNET_MACROS_H__
#define __NAUNET_MACROS_H__

// clang-format off
#define NAUNET_SUCCESS 0
#define NAUNET_FAIL 1

{% if info.method == "cusparse" -%}
#define USE_CUDA
#define MAX_NSYSTEMS 4096
#define NSTREAMS 1 // looks no benefit to use multiple streams
#define MAX_NSYSTEMS_PER_STREAM (MAX_NSYSTEMS/NSTREAMS)
#define BLOCKSIZE 64
{% else %}
#define MAX_NSYSTEMS 1
{% endif %}

#define NELEMENTS {{ macros.elemcidx | length }}
#define NSPECIES {{ macros.speccidx | length }}
#define NHEATPROCS {{ macros.nheating }}
#define NCOOLPROCS {{ macros.ncooling }}
#define THERMAL (NHEATPROCS || NCOOLPROCS)
#if (NSPECIES + THERMAL)
#define NEQUATIONS (NSPECIES + THERMAL)
#else
#define NEQUATIONS 1
#endif
#define NREACTIONS {{ macros.nreact }}
// non-zero terms in jacobian matrix, used in sparse matrix
#define NNZ {{ macros.nnz }}

{% for idx in macros.elemcidx %}
#define {{ idx }} {{ loop.index0 }}
{% endfor %}

{% for idx in macros.speccidx %}
#define {{ idx }} {{ loop.index0 }}
{% endfor %}

#if THERMAL
#define IDX_TGAS NSPECIES
#endif

#endif
