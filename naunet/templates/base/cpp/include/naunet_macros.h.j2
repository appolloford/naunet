
#ifndef __NAUNET_MACROS_H__
#define __NAUNET_MACROS_H__

// clang-format off
#define NAUNET_SUCCESS 0
#define NAUNET_FAIL 1

{% if general.method == "cusparse" -%}
#define USE_CUDA
#define MAX_NSYSTEMS 4096
#define NSTREAMS 1 // looks no benefit to use multiple streams
#define MAX_NSYSTEMS_PER_STREAM (MAX_NSYSTEMS/NSTREAMS)
#define BLOCKSIZE 64
{% else %}
#define MAX_NSYSTEMS 1
{% endif %}

#define NELEMENTS {{ network.elements | length }}
#define NSPECIES {{ network.species | length }}
#define NHEATPROCS {{ network.heating | length }}
#define NCOOLPROCS {{ network.cooling | length }}
#define THERMAL (NHEATPROCS || NCOOLPROCS)
#if (NSPECIES + THERMAL)
#define NEQUATIONS (NSPECIES + THERMAL)
#else
#define NEQUATIONS 1
#endif
#define NREACTIONS {{ network.reactions | length }}
// non-zero terms in jacobian matrix, used in sparse matrix
#define NNZ {{ ode.nnz }}

{% for spec in network.elements %}
#define IDX_ELEM_{{ spec.element_count.keys() | first }} {{ loop.index0 }}
{% endfor %}

{% for spec in network.species %}
#define IDX_{{ spec.alias }} {{ loop.index0 }}
{% endfor %}

#if THERMAL
#define IDX_TGAS NSPECIES
#endif

#endif
