list(APPEND SUNDIALSLIB
    SUNDIALS::cvode
    {% if info.method == "dense" -%}
    SUNDIALS::nvecserial
    {% elif info.method == "sparse" -%}
    SUNDIALS::sunlinsolklu
    SUNDIALS::sunmatrixsparse
    {% elif info.method == "cusparse" -%}
    SUNDIALS::nveccuda
    SUNDIALS::sunmatrixcusparse
    SUNDIALS::sunlinsolcusolversp
    {% endif %}
)

{% if info.device == "gpu" -%}
add_library(naunet_ode STATIC naunet_ode.cu)
set_target_properties(naunet_ode PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
target_include_directories(naunet_ode PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
{% else -%}
add_library(naunet_ode STATIC naunet_ode.cpp)
{% endif -%}
target_include_directories(naunet_ode PUBLIC ${CMAKE_SOURCE_DIR}/include)
target_link_libraries(naunet_ode ${SUNDIALSLIB})

{% if info.device == "gpu" -%}
add_library(naunet_physics STATIC naunet_physics.cu)
set_target_properties(naunet_physics PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
target_include_directories(naunet_physics PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
{% else -%}
add_library(naunet_physics STATIC naunet_physics.cpp)
{% endif -%}
target_include_directories(naunet_physics PUBLIC ${CMAKE_SOURCE_DIR}/include)

add_library(naunet STATIC naunet.cpp)
{% if info.device == "gpu" -%}
set_target_properties(naunet PROPERTIES CUDA_SEPARABLE_COMPILATION ON)
target_include_directories(naunet PRIVATE ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})
{% endif -%}
target_include_directories(naunet PUBLIC ${CMAKE_SOURCE_DIR}/include)
target_link_libraries(naunet ${SUNDIALSLIB})


