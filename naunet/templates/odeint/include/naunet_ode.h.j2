#ifndef __NAUNET_ODE_H__
#define __NAUNET_ODE_H__

#include "naunet_data.h"
#include "naunet_macros.h"

int EvalRates(double *k, double *y, NaunetData *user_data);
#if NHEATPROCS
int EvalHeatingRates(double *kc, double *y, NaunetData *user_data);
#endif
#if NCOOLPROCS
int EvalCoolingRates(double *kc, double *y, NaunetData *user_data);
#endif

class Observer {
   private:
    int mxsteps_;
    int step_;
    double time_;

   public:
    Observer(int mxsteps);
    ~Observer();

    void operator()(const vector_type &x, double t);
};

class Fex {
   private:
    NaunetData *u_data;

   public:
    Fex(NaunetData *data);
    Fex(const Fex &rhs);
    Fex &operator=(const Fex &rhs);
    ~Fex();

    void operator()(const vector_type &abund, vector_type &ydot, double t);
};

class Jac {
   private:
    NaunetData *u_data;

   public:
    Jac(NaunetData *data);
    Jac(const Jac &rhs);
    Jac &operator=(const Jac &rhs);
    ~Jac();

    void operator()(const vector_type &abund, matrix_type &j, const double &t,
                    vector_type &dfdt);
};

#endif
