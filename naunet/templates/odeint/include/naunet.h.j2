#ifndef __NAUNET_H__
#define __NAUNET_H__

#include "naunet_data.h"

#ifdef PYMODULE
#include <pybind11/numpy.h>
#include <pybind11/pybind11.h>

namespace py = pybind11;
#endif

class Naunet {
   public:
    Naunet();
    ~Naunet();
    int Init(int nsystem = 1, double atol = 1e-20, double rtol = 1e-5);
    int Finalize();
    int Solve(double *abund, double dt, NaunetData *data);
#ifdef PYMODULE
    py::array_t<double> PyWrapSolve(py::array_t<double> arr, double dt,
                                    NaunetData *data);
#endif

   private:
    int n_system_;
    double atol_;
    double rtol_;
};

#ifdef PYMODULE

PYBIND11_MODULE(PYMODNAME, m) {
    py::class_<Naunet>(m, "Naunet")
        .def(py::init())
        .def("Init", &Naunet::Init)
        .def("Solve", &Naunet::PyWrapSolve);

    // clang-format off
    py::class_<NaunetData>(m, "NaunetData")
        .def(py::init())
        {% for v in variables.varis -%}
            .def_readwrite("{{ v }}", &NaunetData::{{ v }})
        {% endfor -%}
        ;
    // clang-format on
}

#endif

#endif
