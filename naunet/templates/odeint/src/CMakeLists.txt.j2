set(
    OBJTARGETS
        naunet_constants
        naunet_utilities
        naunet_physics
        naunet_renorm
        naunet_ode
)


{% if general.device == "gpu" -%}
foreach(name ${OBJTARGETS})
    add_library(
        ${name}
            OBJECT
            ${name}.cu
    )
    set_target_properties(
        ${name}
            PROPERTIES
                CUDA_SEPARABLE_COMPILATION ON
    )
    target_include_directories(
        ${name}
            PRIVATE
                ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}
                ${Boost_INCLUDE_DIRS}
            PUBLIC
                ${CMAKE_SOURCE_DIR}/include
    )
endforeach()
{% else %}
foreach(name ${OBJTARGETS})
    add_library(
        ${name}
            OBJECT
            ${name}.cpp
    )
    target_include_directories(
        ${name}
            PUBLIC
                ${CMAKE_SOURCE_DIR}/include
            PRIVATE
                ${Boost_INCLUDE_DIRS}
    )
endforeach()
{% endif %}

if(MAKE_SHARED)
    add_library(
        naunet_shared
            SHARED
            naunet.cpp
    )
    set_target_properties(
        naunet_shared
            PROPERTIES
                OUTPUT_NAME naunet
    )
    {% if general.device == "gpu" -%}
    set_target_properties(
        naunet_shared
            PROPERTIES
                CUDA_SEPARABLE_COMPILATION ON
    )
    target_include_directories(
        naunet_shared
            PRIVATE
                ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}
                ${Boost_INCLUDE_DIRS}
            PUBLIC
                ${CMAKE_SOURCE_DIR}/include
    )
    {% else -%}
    target_include_directories(
        naunet_shared
            PUBLIC
                ${CMAKE_SOURCE_DIR}/include
            PRIVATE
                ${Boost_INCLUDE_DIRS}
    )
    {% endif -%}
    target_link_libraries(
        naunet_shared
            ${OBJTARGETS}
    )
    install(
        TARGETS naunet_shared
        LIBRARY
        DESTINATION lib
    )
endif()

if(MAKE_STATIC)
    add_library(
        naunet_static
            STATIC
            naunet.cpp
    )
    set_target_properties(
        naunet_static
            PROPERTIES
                OUTPUT_NAME naunet
    )
    {% if general.device == "gpu" -%}
    set_target_properties(
        naunet_static
            PROPERTIES
                CUDA_SEPARABLE_COMPILATION ON
    )
    target_include_directories(
        naunet_static
            PRIVATE
                ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES}
                ${Boost_INCLUDE_DIRS}
            PUBLIC
                ${CMAKE_SOURCE_DIR}/include
    )
    {% else -%}
    target_include_directories(
        naunet_static
            PUBLIC
                ${CMAKE_SOURCE_DIR}/include
            PRIVATE
                ${Boost_INCLUDE_DIRS}
    )
    {% endif -%}
    target_link_libraries(
        naunet_static
            ${OBJTARGETS}
    )
    install(
        TARGETS naunet_static
        LIBRARY
        DESTINATION lib
    )
endif()

if(MAKE_PYTHON)

    include(FetchContent)
    FetchContent_Declare(
        pybind11_sources
        GIT_REPOSITORY https://github.com/pybind/pybind11.git
        GIT_TAG v2.11.1
    )
    FetchContent_GetProperties(pybind11_sources)
    if(NOT pybind11_sources_POPULATED)
        FetchContent_Populate(pybind11_sources)
        add_subdirectory(
            ${pybind11_sources_SOURCE_DIR}
            ${pybind11_sources_BINARY_DIR}
        )   
    endif()

    add_library(${PYMODNAME} MODULE naunet.cpp)
    target_compile_definitions(${PYMODNAME}
        PUBLIC
            -DPYMODULE
            -DPYMODNAME=${PYMODNAME}
    )
    target_link_libraries(
        ${PYMODNAME}
            PUBLIC
                pybind11::module
                ${OBJTARGETS}
    )
    target_include_directories(${PYMODNAME} 
        PUBLIC 
            ${CMAKE_SOURCE_DIR}/include
        PRIVATE 
            ${Boost_INCLUDE_DIRS}
    )

    set_target_properties(${PYMODNAME}
        PROPERTIES
            PREFIX "${PYTHON_MODULE_PREFIX}"
            SUFFIX "${PYTHON_MODULE_EXTENSION}"
    )

    install(TARGETS ${PYMODNAME}
        LIBRARY DESTINATION python
    )

endif()

install(DIRECTORY ${PROJECT_SOURCE_DIR}/include/
    DESTINATION include)
