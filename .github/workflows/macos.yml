# test on MacOS
name: macos

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'notebooks/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'notebooks/**'

jobs:

  package_install_and_test:
    strategy:
      matrix:
        os: [macos-11, macos-latest]
        python: ["3.8", "3.9", "3.10"]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - uses: Gr1N/setup-poetry@v8

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ matrix.os }}-python${{ matrix.python }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Pytest
        run: |
          poetry --version 
          poetry install
          poetry run pytest -rs -o log_cli=true -o log_cli_level=DEBUG --runslow tests

      # `poetry shell` doesn't work
      - name: Test venv
        run: |
          source $(poetry env info --path)/bin/activate
          naunet --version

  example_build_and_test:
    needs: package_install_and_test

    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-latest]

    runs-on: ${{ matrix.os }}

    env:
      build_dir: "build"
      config: "Release"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Install BLAS & LAPACK
        run: brew install openblas lapack
          
      - name: Install boost
        # boost 1.76 us "mp" as a namspace and conflict with the proton mass constant
        # download boost 1.75 instead
        # run: brew install boost
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.75.0/source/boost_1_75_0.tar.gz
          tar -zxf boost_1_75_0.tar.gz && cd boost_1_75_0
          ./bootstrap.sh
          sudo ./b2 install

      - name: Install SuiteSparse
        run: brew install suite-sparse

      - name: Install SUNDIALS
        run: |
          wget https://github.com/LLNL/sundials/releases/download/v6.7.0/sundials-6.7.0.tar.gz
          tar -zxvf sundials-6.7.0.tar.gz
          mkdir build-sundials && cd build-sundials
          cmake ../sundials-6.7.0 -DCMAKE_INSTALL_PREFIX=/usr/local/sundials \
              -DSUNDIALS_INDEX_SIZE=32 -DENABLE_KLU=ON \
              -DKLU_INCLUDE_DIR=$(brew --prefix suite-sparse)/include \
              -DKLU_LIBRARY_DIR=$(brew --prefix suite-sparse)/lib \
              -DEXAMPLES_ENABLE_C=OFF -DEXAMPLES_INSTALL=OFF
          make -j4 && sudo make install
          # make a copy to home as a cache
          sudo cp -r /usr/local/sundials $HOME/sundials

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Set up poetry
        uses: Gr1N/setup-poetry@v8

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ matrix.os }}-python${{ matrix.python }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install
        run: |
          poetry --version 
          poetry install

      - name: Create naunet examples
        run: |
          source $(poetry env info --path)/bin/activate
          source ./scripts/actions/create_examples.sh

      - name: Build naunet examples
        run: |
          source $(poetry env info --path)/bin/activate
          source ./scripts/actions/build_examples.sh

      - name: Test naunet examples
        run: |
          source $(poetry env info --path)/bin/activate
          source ./scripts/actions/test_examples.sh

  external_project_test:
    needs: package_install_and_test
    
    strategy:
      fail-fast: false
      matrix:
        os: [macos-11, macos-latest]

    runs-on: ${{ matrix.os }}

    env:
      build_dir: "build"
      config: "Release"

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8

      - name: Set up poetry
        uses: Gr1N/setup-poetry@v8

      - uses: actions/cache@v3
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ matrix.os }}-python${{ matrix.python }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install
        run: |
          poetry --version 
          poetry install

      - name: Create naunet examples
        run: |
          source $(poetry env info --path)/bin/activate
          cd $HOME
          naunet example --select=4 --path=naunet_ext_example4

      - name: Build and test naunet examples
        run: |
          source $(poetry env info --path)/bin/activate
          cd $HOME/naunet_ext_example4
          cmake -S. -Bbuild -DCMAKE_BUILD_TYPE=Release -DMAKE_PYTHON=ON
          cmake --build build -j4
          cd build && ctest
